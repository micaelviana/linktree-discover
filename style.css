/**reset css*/
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

:root {
  --text-color: white;
  --bg-url: url("./assets/bg-mobile.jpg");
  --stroke-color: rgba(255, 255, 255, 0.5);
  --surface-color: rgba(255, 255, 255, 0.05);
  --surface-color-hover: rgba(255, 255, 255, 0.02);
  --highlight-color: rgba(255, 255, 255, 0.2);
  --switch-bg-url: url("assets/moon-stars.svg");
}

.light {
  --text-color: black;
  --bg-url: url("./assets/bg-mobile-light.jpg");
  --stroke-color: rgba(0, 0, 0, 0.5);
  --surface-color: rgba(0, 0, 0, 0.05);
  --surface-color-hover: rgba(0, 0, 0, 0.02);
  --highlight-color: rgba(0, 0, 0, 0.2);
  --switch-bg-url: url("assets/sun.svg");
}

/*objetos inline funcionam um do lado do outro,
 * entao da pra usar text-align pra cuidar da posicao deles
 * se um objeto block tem um pai inline da pra usar o text-align no pai pra cuidar do filho 
 * */

body {
  background: var(--bg-url) no-repeat top center/cover;
  height: 100vh;
}

body * {
  color: var(--text-color);
  font-family: "Inter", sans-serif;
}

/*margin situation is insane
 *se aplica 4 margens, margin: v1 v2 v3 v4 eh um relogio, topo, direita, embaixo esquerda
 se aplica 3 fica: topo laterais embaixo
 se aplica 2 fica: topo-embaixo e esquerda-direita
 * */
#container {
  width: 100%;
  max-width: 588px;
  margin: auto;

  padding: 0 24px;
}

/*profile*/
#profile {
  text-align: center;
  padding: 24px;
}

#profile img {
  width: 112px;
}

#profile p {
  font-weight: 500;
  line-height: 24px;
  margin-top: 8px;
}

/*switch*/

#switch {
  /*eu quero que o button abaixo que eh absolute esteja relativizado ao container do switch*/
  position: relative;
  width: 64px;
  margin: 4px auto;
}

#switch button {
  width: 32px;
  height: 32px;
  background: white var(--switch-bg-url) no-repeat center;
  border: 0;
  border-radius: 50%;

  /*absolute pra eu poder colorcar esse elemento em qualquer lugar*/
  position: absolute;
  right: 0;
  top: 50%;
  z-index: 1;
  transform: translateY(-50%);
}

.light #switch button {
  right: 0;
  left: 0;
}

#switch span {
  display: block;
  width: 64px;
  height: 24px;
  background: var(--surface-color);
  border: 1px solid var(--stroke-color);

  backdrop-filter: blur 4px;
  -webkit-backdrop-filter: blur 4px;
  border-radius: 9999px;
}

ul {
  list-style: none;
  display: flex;
  flex-direction: column;
  gap: 16px;
  padding: 24px 0;
}

ul li a {
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 16px 24px;
  background: var(--surface-color);
  border: 1.5px solid var(--stroke-color);

  border-radius: 8px;
  backdrop-filter: blur(4px);
  -webkit-backdrop-filter: blur(4px);

  text-decoration: none;
  font-weight: 500;
  transition: background 0.2s;
}

/*pseudo selector*/
ul li a:hover {
  background-color: var(--surface-color-hover);
}

#social-links {
  display: flex;
  justify-content: center;
  gap: 16px;
  padding: 24px 0;
  font-size: 24px;
}

#social-links a {
  display: flex;
  justify-content: center;
  align-items: center;
  padding: 16px;
  transition: background 0.2s;
  border-radius: 50%;
}

#social-links a:hover {
  background: var(--highlight-color);
}

footer {
  padding: 24px 0;
  text-align: center;
  font-size: 14px;
}

/*media queries */
/*so funciona se tive aquela regra de viewport no html*/
@media (min-width: 700px) {
  :root {
    --bg-url: url(".assets/bg-desktop.jpg");
  }

  .light {
    --bg-url: url ("assets/bg-desktop-light.jpg");
  }
}
